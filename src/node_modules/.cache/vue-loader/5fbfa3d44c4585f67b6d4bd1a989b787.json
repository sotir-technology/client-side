{"remainingRequest":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\client-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\client-side\\src\\components\\Badge.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\client-side\\src\\components\\Badge.vue","mtime":1565806512005},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\client-side\\node_modules\\babel-loader\\lib\\index.js","mtime":1565806376918},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\client-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1565806393607},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\client-side\\node_modules\\vue-loader\\lib\\index.js","mtime":1565806498765}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"badge\",\n  props: {\n    tag: {\n      type: String,\n      default: \"span\",\n      description: \"Html tag to use for the badge.\"\n    },\n    rounded: {\n      type: Boolean,\n      default: false,\n      description: \"Whether badge is of pill type\"\n    },\n    circle: {\n      type: Boolean,\n      default: false,\n      description: \"Whether badge is circle\"\n    },\n    icon: {\n      type: String,\n      default: \"\",\n      description: \"Icon name. Will be overwritten by slot if slot is used\"\n    },\n    type: {\n      type: String,\n      default: \"default\",\n      description: \"Badge type (primary|info|danger|default|warning|success)\"\n    }\n  }\n};\n",{"version":3,"sources":["Badge.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Badge.vue","sourceRoot":"components","sourcesContent":["<template>\n    <component :is=\"tag\"\n               class=\"badge\"\n               :class=\"\n               [`badge-${type}`,\n                rounded ? `badge-pill` : '',\n                circle && 'badge-circle'\n               ]\">\n        <slot>\n            <i v-if=\"icon\" :class=\"icon\"></i>\n        </slot>\n    </component>\n</template>\n<script>\nexport default {\n  name: \"badge\",\n  props: {\n    tag: {\n      type: String,\n      default: \"span\",\n      description: \"Html tag to use for the badge.\"\n    },\n    rounded: {\n      type: Boolean,\n      default: false,\n      description: \"Whether badge is of pill type\"\n    },\n    circle: {\n      type: Boolean,\n      default: false,\n      description: \"Whether badge is circle\"\n    },\n    icon: {\n      type: String,\n      default: \"\",\n      description: \"Icon name. Will be overwritten by slot if slot is used\"\n    },\n    type: {\n      type: String,\n      default: \"default\",\n      description: \"Badge type (primary|info|danger|default|warning|success)\"\n    }\n  }\n};\n</script>\n<style>\n</style>\n"]}]}